name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Run tests
      run: go test -v -race ./...

    - name: Generate release notes
      id: release_notes
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}

        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 ${TAG_NAME}^ 2>/dev/null || echo "")

        # Generate release notes
        if [ -z "$PREV_TAG" ]; then
          # First release
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Initial Release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "First release of canonlog - a structured logging library for Go." >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          # Subsequent releases
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes since ${PREV_TAG}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log ${PREV_TAG}..${TAG_NAME} --pretty=format:"- %s (%h)" --no-merges >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.release_notes.outputs.NOTES }}
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
